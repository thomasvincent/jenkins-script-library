plugins {
    id 'groovy'
    id 'codenarc'
    id 'jacoco'
    id 'maven-publish'
}

group = 'com.github.thomasvincent'
version = '1.0.0'
description = 'Jenkins Script Library - A collection of Groovy utilities for Jenkins automation'

repositories {
    mavenCentral()
    maven { url 'https://repo.jenkins-ci.org/releases/' }
    maven { url 'https://repo.jenkins-ci.org/public/' }
    maven { url 'https://repo.jenkins-ci.org/artifactory/releases' }
}

sourceSets {
    integrationTest {
        groovy {
            srcDir 'src/integration-test/groovy'
        }
        resources {
            srcDir 'src/integration-test/resources'
        }
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

dependencies {
    // Use Groovy 2.4.x to match Jenkins LTS built-in version
    implementation 'org.codehaus.groovy:groovy-all:2.4.21'
    
    // Standard dependencies
    implementation 'org.apache.logging.log4j:log4j-api:2.20.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.20.0'
    
    // Jenkins dependencies - marked as provided since they're provided by Jenkins
    compileOnly 'javax.annotation:javax.annotation-api:1.3.2'
    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'org.jenkins-ci.main:jenkins-core:2.361.1'
    compileOnly 'org.jenkins-ci.plugins:credentials:2.6.1'
    compileOnly 'org.jenkins-ci.plugins:matrix-auth:3.2.6'
    compileOnly 'org.jenkins-ci.plugins.workflow:workflow-api:2.46'
    compileOnly 'org.jenkins-ci.plugins.workflow:workflow-step-api:2.24'
    
    // Unit test dependencies
    testImplementation 'org.mockito:mockito-core:4.11.0'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.4' // Spock for Groovy 2.4
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    
    // Unit test Jenkins dependencies (needed for mocking)
    testImplementation 'org.jenkins-ci.main:jenkins-core:2.361.1'
    testImplementation 'org.jenkins-ci.plugins:credentials:2.6.1'
    testImplementation 'org.jenkins-ci.plugins:matrix-auth:3.2.6'
    testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
    
    // Integration test dependencies for running real Jenkins tests
    integrationTestImplementation 'org.jenkins-ci.main:jenkins-test-harness:2.72'
    integrationTestImplementation 'org.jenkins-ci:test-annotations:1.5'
    integrationTestImplementation 'org.jenkins-ci.main:jenkins-core:2.361.1'
    integrationTestImplementation 'org.jenkins-ci.plugins:credentials:2.6.1'
    integrationTestImplementation 'org.jenkins-ci.plugins:matrix-auth:3.2.6'
    integrationTestImplementation 'javax.servlet:javax.servlet-api:4.0.1'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

// Configure source set exclusions to make testing easier
sourceSets {
    main {
        groovy {
            exclude '**/scripts/**'
        }
    }
}

tasks.withType(CodeNarc) {
    enabled = false
}

jacoco {
    toolVersion = "0.8.8"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

test {
    // Use JUnit Platform for JUnit Jupiter
    useJUnitPlatform()
    
    testLogging {
        events "passed", "skipped", "failed"
    }
    finalizedBy jacocoTestReport
    
    // Skip tests if the system property is set
    onlyIf { !project.hasProperty('skipTests') }
}

task integrationTest(type: Test) {
    description = 'Runs integration tests.'
    group = 'verification'
    
    // Use JUnit Platform for JUnit Jupiter
    useJUnitPlatform()

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    
    mustRunAfter test
    
    testLogging {
        events "passed", "skipped", "failed"
        showStandardStreams = true
    }
    
    // Skip integration tests if the system property is set
    onlyIf { !project.hasProperty('skipTests') }
}

// Enable integration tests in the build process
check.dependsOn integrationTest

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}

// Create a packaged jar with all the scripts
task scriptJar(type: Jar) {
    archiveBaseName = 'jenkins-script-library'
    archiveClassifier = 'scripts'
    from sourceSets.main.allSource
}

// Publish to Maven local
publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifact scriptJar
        }
    }
}